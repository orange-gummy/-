・定数は変数名を大文字にして定義します
　　3つの定数名を修正

・命名はスネークケース(_で単語を区切るやつ)です
　　できてるはず

・インデントはスペース*4でやりましょう
　　できてるはず

・比較の式とか変数定義とか、=や<などを使う場合は文字と記号の間にスペースを入れましょう
　　できてるはず

・if hoge == True: という記述はあんまり意味がない(if hoge:のみでよい)
　　記述してないはず

・型判定にはtype()もしくはisinstance()が使えます
　　使う必要ない

・ifの条件式内とかでandを続けて書く場合は条件式を数行に分けたりして、見やすくしましょう
　　andは使っていない

・Pythonにおいても、main() を定義するのは良いことだと思います！Pythonは関数の定義を使う後に回すことができないけど、mainに入れちゃえば大丈夫とか色んなメリットがあると思います
　　わかりやすくなる！

・ログ出力の際は、print() をそのまま使うより、適当なlog() みたいな関数を定義した方がいいと思います。なぜなら出力しているものがログなのか、それとも求める出力なのか分からないからです。
　　なるほど

・変数名で大体何を表してるか分かるようにしてください……
　　できるだけ頑張った

・関数を定義するのは、再利用性を高める+単品でのテスト性能を高めるみたいな意味合いが強いので、そこかしこで定義する必要はあんまりありません
　　main()の中(自分の場合はGUIを使うためcommand()の中)で全体的にどのように処理が進んでいるのかを分かりやすくするため(またはテストのため)にすべての処理を関数に定義して処理に名前を付けてみた
　　直した方がよかったら直しますがどうでしょうか

・一時変数のtmpとか、共通の語彙を使うのは良いことですね(これは、たまに温度のtemperatureと混ざるかもね)
　　なるほど

・コードを意味ごとにブロックで分けると良いと思います　独立した意味のある処理同士の間には改行をはさむと読みやすいです
　　はい

・インデントが深くなりすぎると読みにくいので頑張って減らしましょう
　　一か所continueを使って直した

・ if hoge < a and hoge < b and hoge < c:   →これは if hoge < min(a, b, c) でよい
　　なるほど

・for i in t:
  　  hoge[i] = huga[i]
　さすがにこれはhoge = huga でいい
　　自分は大丈夫なはず
　　繰り返しごとに確率を計算したりが必要なためforである必要があるはず